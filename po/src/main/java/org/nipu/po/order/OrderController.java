package org.nipu.po.order;

import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;
import org.nipu.po.order.clients.ProductSpecificationRepository;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * TODO: This is autogenerated Java-Doc.
 *
 * @author Nikita_Puzankov
 */
@RestController
public class OrderController {
    private final ProductOrderRepository orderRepository;
    private final ProductSpecificationRepository specificationRepository;

    public OrderController(ProductOrderRepository orderRepository, ProductSpecificationRepository specificationRepository) {
        this.orderRepository = orderRepository;
        this.specificationRepository = specificationRepository;
    }

    @HystrixCommand(fallbackMethod = "getFallback")
    @PutMapping("/order/{specificationId}")
    public ProductOrder orderProductBySpecificationId(@PathVariable String specificationId) {
        System.out.println(specificationRepository.getCatalog());
        if (specificationRepository.existsById(specificationId) == null) {
            throw new RuntimeException("There is no product specification with Id: " + specificationId);
        }
        return orderRepository.save(new ProductOrder(null, specificationId, 1l));
    }

    public ProductOrder getFallback(String id) {
        return new ProductOrder("Exception", id, 0L);
    }
}
